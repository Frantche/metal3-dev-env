kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/{{ CAPI_VERSION }}
metadata:
  name: ${ CLUSTER_NAME }
  namespace: ${ NAMESPACE }
spec:
  rolloutStrategy:
    rollingUpdate:
      maxSurge: ${ MAX_SURGE_VALUE }
  replicas: ${ CONTROL_PLANE_MACHINE_COUNT }
  version: ${ KUBERNETES_VERSION }
  machineTemplate:
    nodeDrainTimeout: ${ NODE_DRAIN_TIMEOUT }
    infrastructureRef:
      kind: Metal3MachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/{{ CAPM3_VERSION }}
      name: ${ CLUSTER_NAME }-controlplane
  kubeadmConfigSpec:
    clusterConfiguration: 
      apiServer:
        extraArgs:
          anonymous-auth: "true"
          authorization-mode: RBAC,Node
          default-not-ready-toleration-seconds: "60"
          default-unreachable-toleration-seconds: "60"
          disable-admission-plugins: AlwaysAdmit
          enable-admission-plugins: AlwaysPullImages,NamespaceLifecycle,ServiceAccount,NodeRestriction
        timeoutForControlPlane: 10m0s
      controllerManager:
        extraArgs:
          feature-gates: RotateKubeletServerCertificate=true
          terminated-pod-gc-threshold: "25"
          use-service-account-credentials: "true"
    joinConfiguration:
      controlPlane:
        localAPIEndpoint:
          advertiseAddress: ""
          bindPort: 0
      discovery: {}
      nodeRegistration:
        name: "{{ '{{ ds.meta_data.name }}' }}"
        kubeletExtraArgs:
          node-labels: "metal3.io/uuid={{ '{{ ds.meta_data.uuid }}' }}"
          provider-id: "metal3://{{ '{{ ds.meta_data.providerid }}' }}"
          feature-gates: "AllAlpha=false"
          cgroup-driver: "systemd"
          runtime-request-timeout: "5m"
          event-qps: "0"
          feature-gates: RotateKubeletServerCertificate=true
          read-only-port: "0"
    initConfiguration:
      localAPIEndpoint:
        advertiseAddress: ""
        bindPort: 0
      nodeRegistration:
        name: "{{ '{{ ds.meta_data.name }}' }}"
        kubeletExtraArgs:
          node-labels: "metal3.io/uuid={{ '{{ ds.meta_data.uuid }}' }}"
          provider-id: "metal3://{{ '{{ ds.meta_data.providerid }}' }}"
          feature-gates: "AllAlpha=false"
          cgroup-driver: "systemd"
          runtime-request-timeout: "5m"
          event-qps: "0"
          feature-gates: RotateKubeletServerCertificate=true
          read-only-port: "0"
    users:
    - name: {{ IMAGE_USERNAME }}
      sudo: "ALL=(ALL) NOPASSWD:ALL"
      sshAuthorizedKeys:
      - {{ SSH_PUB_KEY_CONTENT }}
{% filter indent(width=4, first=True) %}
{% include "cluster-template-controlplane-kubeadm-config-%s.yaml" % IMAGE_OS %}
{% endfilter %}

---
apiVersion: infrastructure.cluster.x-k8s.io/{{ CAPM3_VERSION }}
kind: Metal3MachineTemplate
metadata:
  name: ${ CLUSTER_NAME }-controlplane
  namespace: ${ NAMESPACE }
spec:
  template:
    spec:
      image:
        url: {{ IMAGE_URL }}
        checksum: {{ IMAGE_CHECKSUM }}
        checksumType: {{ IMAGE_CHECKSUM_TYPE }}
        format: {{ IMAGE_FORMAT }}
      dataTemplate:
        name: ${ CLUSTER_NAME }-controlplane-template
---
{% with template_type="controlplane" %}
{% include "metal3datatemplate-template.yaml" %}
{% endwith %}
